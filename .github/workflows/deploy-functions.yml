name: Deploy Azure Functions

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: {}

permissions:
  id-token: write
  contents: read

env:
  FUNCTIONAPP_NAME: ali-func-inprocess-4870
  PROJECT_DIR: CrossclimbBackend/CrossclimbBackend

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      # Set a publish directory using the runner's temp folder
      # NOTE: we use the built-in $RUNNER_TEMP shell var and export it to $GITHUB_ENV
      - name: Define publish directory
        run: echo "PUBLISH_DIR=${RUNNER_TEMP}/publish" >> "$GITHUB_ENV"

      - name: Restore
        working-directory: ${{ env.PROJECT_DIR }}
        run: dotnet restore

      - name: Build (Release)
        working-directory: ${{ env.PROJECT_DIR }}
        run: dotnet build --configuration Release --no-restore

      - name: Publish to temp folder
        working-directory: ${{ env.PROJECT_DIR }}
        run: dotnet publish --configuration Release --output "${{ env.PUBLISH_DIR }}"

      - name: List publish output (sanity check)
        run: |
          echo "Publish dir: ${{ env.PUBLISH_DIR }}"
          ls -la "${{ env.PUBLISH_DIR }}"

      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy to Azure Functions
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.FUNCTIONAPP_NAME }}
          package: ${{ env.PUBLISH_DIR }}
